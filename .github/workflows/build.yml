name: Analyze and Build Flutter package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  inputs:
    min_score:
      required: false
      type: number
      default: 140

jobs:
  spell-check:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/spell_check.yml@v1
    with:
      includes: |
        **/*.{dart,md,yaml}
        !.dart_tool/**/*.{dart,yaml}
        .*/**/*.yml
      modified_files_only: false
      working_directory: "."

  static-analyses:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}
      - run: flutter --version

      - name: 📦 Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          very_good --analytics false
          very_good packages get --recursive --ignore=${{inputs.package_get_excludes}}

      - name: ✨ Check Formatting
        run: dart format --set-exit-if-changed .

      - name: 🕵️ Analyze
        run: flutter analyze .

      - name: 📦 Install dartdoc
        run: flutter pub global activate dartdoc

      - name: 📄 Run dartdoc
        run: dart doc . || fail "dart doc failed"

      - name: 📦 Install Pana
        run: flutter pub global activate pana

      - name: 📊 Verify Pana Score
        run: |
          PANA=$(pana . --no-warning); PANA_SCORE=$(echo $PANA | sed -n "s/.*Points: \([0-9]*\)\/\([0-9]*\)./\1\/\2/p")
          echo "Score: $PANA_SCORE"
          IFS='/'; read -a SCORE_ARR <<< "$PANA_SCORE"; SCORE=SCORE_ARR[0];
          if (( $SCORE < ${{inputs.min_score}} )); then echo "The minimum score of ${{inputs.min_score}} was not met!"; exit 1; fi

  publish:
    needs:
      [
        spell-check,
        static-analyses,
      ]
    runs-on: ubuntu-latest
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/flutter_pub_publish.yml@v1
    with:
      flutter_channel: "stable"
      working_directory: "."
      pub_credentials: ${{ secrets.PUB_CREDENTIALS }}
